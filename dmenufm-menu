#!/bin/sh

## PROMPT FUNCTIONS
yprompt () { # Usage yprompt [MSG] [BG_COLOR]
    ${FM_PROG:-dmenu} ${FM_OPTS--f -fn "$FM_GENERIC_FONT" -sb "$2" -i -l 10} ${FM_OPT_PROMPT--p} "$1 "
}

xprompt () { # Usage xprompt [MSG] [BG_COLOR]
    printf '%s' "" | ${FM_PROG:-dmenu} ${FM_OPTS--f -fn "$FM_GENERIC_FONT" -sb "$2" -i -l 10} ${FM_OPT_PROMPT--p} "$1 "
}


NotiPrompt () { # Usage NotiPrompt [MSG]
    printf '%s' "" | ${FM_PROG:-dmenu} ${FM_NOTIF_OPTS:-${FM_OPTS--f -fn "$FM_NOTIF_FONT" -sb "#d79921" -sf "#1d2021" -nf "#000000" -nb "#000000"}} ${FM_OPT_PROMPT--p} "$1 "

}

DangerPrompt () { # Usage: DangerPrompt [MSG] && ...
    [ "$(printf "No\\nYes" | ${FM_PROG:-dmenu} ${FM_DANGER_OPTS:-${FM_OPTS--f -fn $FM_DANGER_FONT -i -nb darkred -sb red -sf white -nf gray}} ${FM_OPT_PROMPT--p} "$1")" = "Yes" ]
}


## MENUFUNCTIONS

MenuDir () { # Generate dir
    IFS="$nl"
    DIRs=$(
    for dir in *; do
	[ -d "$dir" ] && printf '%s\n' "$dir/"
    done
)
unset IFS
}

MenuDotDir () { # Generate dotdir
    IFS="$nl"
    DOTDIRs=$(
    for dir in .*; do
	[ -d "$dir" ] && printf '%s\n' "$dir/"
    done | sed "\|^./$| d; \|^../$| d"
)
unset IFS
}

MenuFile () { # Generate file
    IFS="$nl"
    FILEs=$(
    for file in *; do
	[ -f "$file" ] && printf '%s\n' "$file"
    done
)
unset IFS
}

MenuDotFile () { # Generate dorfile
    IFS="$nl"
    DOTFILEs=$(
    for file in .*; do
	[ -f "$file" ] && printf '%s\n' "$file"
    done
)
unset IFS
}

Menu () { # Generate default menu
    MenuDir
    MenuDotDir
    MenuFile
    MenuDotFile
}

UpdateMenu () { # Generate menu based on arguments
    list=
    for element in $keeplist; do
	case $element in
	    DIRs) MenuDir && list=$(printf '%s\n' "$list" "$DIRs") ;;
	    FILEs) MenuFile && list=$(printf '%s\n' "$list" "$FILEs") ;;
	    DOTDIRs) MenuDotDir && list=$(printf '%s\n' "$list" "$DOTDIRs") ;;
	    DOTFILEs) MenuDotFile && list=$(printf '%s\n' "$list" "$DOTFILEs") ;;
	esac
    done
}

ActionMenu () { # Usage: ActionMenu [MSG] [BG_COLOR]
    while [ -n "$actCHOICE" ]; do
	[ -z "$keeplist" ] && Menu && list=$(printf '%s\n' "$DIRs" "$FILEs" "$DOTDIRs" "$DOTFILEs") || UpdateMenu
	[ "$rollingmenu" = "true" ] && [ -f "$rollmenu" ] || [ "$PWD" = "$rolldir" ] &&
		list="$(printf '%s\n' "$rollmenu" "${list#*"$rollmenu"}" "${list%%"$rollmenu"*}")" &&
		rollmenu="" &&
		rolldir=""
	if [ "$bulkselection" = "true" ]; then
	    actCHOICE=$(printf '%s\n' "$BACKWARD" "$TARGET" "$ENDSELECTION" "$FM_HIS" "$list" | sed "/^$/ d" | yprompt "$1" "$2")
	elif [ "$allowbulk" != "NotAllowed" ]; then
	    actCHOICE=$(printf '%s\n' "$BACKWARD" "$TARGET" "$allowbulk" "$allselection" "$masselection" "$FM_HIS" "$list" | sed "/^$/ d" | yprompt "$1" "$2")
	elif [ "$preview" = "true" ]; then
	    actCHOICE=$(printf '%s\n' "$list" "$BACKWARD" "$FM_HIS" | sed "/^$/ d" | yprompt "$1" "$2")
	else
	    actCHOICE=$(printf '%s\n' "$BACKWARD" "$TARGET" "$FM_HIS" "$list" | sed "/^$/ d" | yprompt "$1" "$2")
	fi
	# Outcome matching
	case "$actCHOICE" in
	    "$TARGET")
		case "$termpath" in
		    "true")
			printf '%s' "$PWD" && actCHOICE=""
			break
			;;
		    *)
			HERE=$(printf '%s' "$PWD")
			name=$(printf '%s' "${PWD##*/}")
			[ "$bulkselection" = "true" ] && bulklist=$(printf '%s\n' "$bulklist" "$HERE") && cd "../"
			break
			;;
		esac
		;;
	    "$BACKWARD")
		case "$rollingmenu" in
		    "true")
			rollmenu="$PWD"
			cd "../" || NotiPrompt "Need super user permission to enter this directory"
			rolldir="${PWD##*/}"
			History "$actCHOICE"
			;;
		    *)
			cd "../" || NotiPrompt "Need super user permission to enter this directory"
			History "$actCHOICE"
		esac
		;;
	    "$ENDSELECTION")
		bulkselection="false"
		break
		;;
	    "$allowbulk")
		bulkselection="true"
		break
		;;
	    "$allselection"|"$masselection")
		bulkselection="false"
		HERE=$(printf '%s' "$PWD")
		name=$(printf '%s' "${PWD##*/}")
		break
		;;
	    "$FM_HIS")
		FM_HIS
		continue
		;;
	    *)
		if [ -d "$actCHOICE" ]; then
		    case "$rollingmenu" in
		        "true")
			    rolldir="$PWD"
			    cd "$actCHOICE" || NotiPrompt "Need super user permission to enter this directory"
			    rollmenu="$actCHOICE"
			    History "$actCHOICE"
			    ;;
			*)
			    cd "$actCHOICE" || NotiPrompt "Need super user permission to enter this directory"
			    History "$actCHOICE"
			    ;;
		    esac
		    continue
		elif [ -f "$actCHOICE" ]; then
		    case "$termpath" in
		        "true")
			    printf '%s' "$PWD/$actCHOICE" && actCHOICE=""
			    break
			    ;;
			*)
			    rollmenu="$actCHOICE"
			    HERE=$(printf '%s' "$PWD/$actCHOICE")
			    name=$(printf '%s' "$actCHOICE")
			    [ "$bulkselection" = "true" ] && bulklist=$(printf '%s\n' "$bulklist" "$HERE")
			    break
			    ;;
		    esac
		else
		    HERE=""
		    name=""
		    bulkselection="false"
		    actCHOICE="placeholder"
		    break
		fi
		;;
	esac
    done
}

TwoPWD () { # Usage: Show last two level of PWD
    # Need "${PWD##*/}" to prevent special character
    TMP="${PWD%%/"${PWD##*/}"}"
    TMP="${TMP##*/}"
    [ ${#TMP} -ge 30 ] && TMP="$(printf '%s' "$(printf '%s' "$TMP" | cut -b 1-30)...")"
    TMP2="${PWD##*/}"
    [ ${#TMP2} -ge 30 ] && TMP2="$(printf '%s' "$(printf '%s' "$TMP2" | cut -b 1-30)...")"
    TwoPWD="$(printf '%s' "$TMP/$TMP2")"
    unset TMP TMP2
}

MainMenu () { # Usage: MainMenu
    while [ -n "$CHOICE" ]; do
	[ -z "$keeplist" ] && Menu && list=$(printf '%s\n' "$DIRs" "$FILEs" "$DOTDIRs" "$DOTFILEs") || UpdateMenu
	[ "$rollingmenu" = "true" ] && [ -f "$rollmenu" ] || [ "$PWD" = "$rolldir" ] &&
		list="$(printf '%s\n' "$rollmenu" "${list#*"$rollmenu"}" "${list%%"$rollmenu"*}")" &&
		rollmenu="" &&
		rolldir=""
	TwoPWD
	CHOICE=$(printf '%s\n' "$BACKWARD" "$TARGET" "$ACTION" "$TERM" "$list" | sed "/^$/ d" | yprompt "$TwoPWD" "$FM_GENERIC_COLOR")
	# Outcome matching
	case "$CHOICE" in
	    "$TARGET")
		case "$termpath" in
		    "true")
			printf '%s' "$PWD" && CHOICE=""
			break
			;;
		    *)
			FileOpen "$PWD"
			History "$CHOICE"
			;;
		esac
		;;
	    "$BACKWARD")
		case "$rollingmenu" in
		    "true")
			rollmenu="${PWD##*/}/"
			cd "../" || NotiPrompt "Need super user permission to enter this directory"
			rolldir="$PWD"
			History "$CHOICE"
			;;
		    *)
			cd "../" || NotiPrompt "Need super user permission to enter this directory"
			History "$CHOICE"
			;;
		esac
		;;
	    "$ACTION") FM_Action ;;
	    "$TERM") $TERMINAL ;;
	    *)
		if [ -d "$CHOICE" ]; then
		    case "$rollingmenu" in
			"true")
			    rolldir="$PWD"
			    cd "$CHOICE" || NotiPrompt "Need super user permission to enter this directory"
			    rollmenu="$CHOICE"
			    History "$CHOICE"
			    ;;
			*)
			    cd "$CHOICE" || NotiPrompt "Need super user permission to enter this directory"
			    History "$CHOICE"
			    ;;
		    esac
		    continue
		elif [ -f "$CHOICE" ]; then
		    case "$termpath" in
		        "true")
			    printf '%s' "$PWD/$CHOICE" && CHOICE=""
			    break
			    ;;
			*)
			    rollmenu="$CHOICE"
			    FileOpen "$PWD/$CHOICE"
			    History "$CHOICE"
			    ;;
		    esac
		else
		    break
		fi
		;;
	esac
    done
}
