#!/bin/sh

DangerMenu () { # Usage: DangerMenu [CMD] [MSG] [Dest]
	IFS="
	"
	if DangerPrompt "$2"; then
		for selection in $(printf '%s' "$SELECTED"); do
			unset IFS
			if [ -z "$destination" ]; then
				$1 "$selection"
			else
				$1 "$selection" "$3"
			fi
		done && NotiPrompt "Selected removed."
	fi
}

FM_TRH () {
	# Allow multiple files to be selected
	allowbulk="Bulk Trash"
	allselection="Bulk Trash all"
	[ ! -d "$FM_TRASH" ] && mkdir -p "$FM_TRASH"
	trashmenu=$(printf '%s\n' "Move to trash" "Go to trash" "Empty trash" | yprompt "Dmenufm Trash" "$FM_GENERIC_COLOR")
	case $trashmenu in
		"Move to trash")
			ActionMenu "Move file/directory to trash: " "$FM_ACTION_COLOR_LV1" || return && allowbulk="NotAllowed"
			if [ -n "$bulkselection" ]; then
				# Multi-selection mode
				BulkMode "Select files / directories to move to trash: "
				[ "$actCHOICE" = "$ENDSELECTION" ] && DangerMenu "mv" "Move all selected to trash?" "$FM_TRASH"
			elif [ "$actCHOICE" = "$allselection" ]; then
				BulkListAll
				DangerMenu "rm -rf" "Delete all selected in $name?" ""
			else
				# Single-selection mode
				allowbulk="NotAllowed"
				# Check the chosen on is directory or not
				[ -n "$HERE" ] && [ -d "$HERE" ] && result=$?
				[ -n "$HERE" ] && SELECTED="$HERE" && DangerMenu "rm -rf" "Remove all the files / directories in $name?" ""
				[ "$result" = "0" ] && cd "../" && result=
			fi
			;;
		"Go to trash")
			cd "$FM_TRASH" || return
			;;
		"Empty trash")
			# Lesson: You cannot quote a wildcard. No quote on *.
			if DangerPrompt "Remove all files and/or directory in trash?" && rm -rf "$FM_TRASH"/*; then
				NotiPrompt "Trash is empty." || return
			else
				return
			fi
			;;
	esac
}
