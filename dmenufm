#!/bin/sh

. ./Tools/dmenufm-def
. ./Tools/dmenufm-menu
. ./Tools/dmenufm-fileopen
. ./Actions/FM_Action
. ./Actions/FM_PCP
. ./Actions/FM_NEW
. ./Actions/FM_MYL
. ./Actions/FM_DEL
. ./Actions/FM_TRH
. ./Actions/FM_REM
. ./Actions/FM_HIS
. ./Actions/FM_BMK
. ./Actions/FM_CMD
. ./Actions/FM_ZIP


CheckDeps () {
	for CurDep in "$@"; do
		if ! command -v "$CurDep" 1> /dev/null 2>&1; then
			printf '%s' "ERROR: Dependency $CurDep not met."  1>&2
		fi
	done

	unset CurDep
}

CheckDeps find tail xdg-mime xdg-open sed grep wc cp mv rm paste

UsageInfo () {
	while read -r CurLine; do
		printf "%b\n" "$CurLine"
	done <<-EOF
		\r            DMENUFM
		\r            Written by huijunchen9260 (chen.9260@osu.edu)
		\r
		\r            Simple file manager using dmenu
		\r
		\rSYNTAX:     dmenufm [OPTS]
		\r
		\rOPTS:       -h | --help               - Show this usage information.
		\r            -d | --directory          - Only directories.
		\r            -f | --file               - Only show files.
		\r            -D | --dotdirectory       - Only show hidden directories.
		\r            -F | --dotfile            - Only show hidden files.
		\r            -p | --lastpath           - Opens in last working directory. (cd on exit)
		\r            -r | --rollingmenu        - Rolling menu based on selected files.
		\r            -t | --termpath           - Print out the path of file / directory.
	EOF

	unset CurLine
}


### ARGUMENTS

while [ -n "$1" ]; do
	case $1 in
		"-d"|"--directory" ) keeplist="${keeplist} DIRs" ;;
		"-f"|"--file" ) keeplist="${keeplist} FILEs" ;;
		"-D"|"--dotdirectory" ) keeplist="${keeplist} DOTDIRs" ;;
		"-F"|"--dotfile" ) keeplist="${keeplist} DOTFILEs" ;;
		"-p"|"--lastpath" ) outputpath="placeholder" ;;
		"-r"|"--rollingmenu") rollingmenu="true" ;;
		"-t"|"--termpath") termpath="true" ;;
		"-h"|"--help" ) UsageInfo; exit 0; ;;
		*)
			if [ -d "$1" ]; then
				cd "$1" || exit 1
			elif [ -f "$1" ]; then
				FileOpen "$1"
			else
				printf '%s\n' "Invalid option. Use -h to read help"
				exit 1
			fi
			;;
	esac
	shift
done

### RUN THE MAIN FUNCTION

# --lastpath option:
[ -n "$outputpath" ] && cd "$(cat -u "$FM_LASTPATH")"

MainMenu

printf '%s' "$PWD" > "$FM_LASTPATH"
